const fs = require('fs');
const path = require('path');

console.log('üß™ Test des notifications de mise √† jour PWA');

// V√©rifier que le service worker personnalis√© existe
const swPath = path.join(__dirname, '..', 'public', 'sw-custom.js');
if (!fs.existsSync(swPath)) {
  console.error('‚ùå Service worker personnalis√© non trouv√©:', swPath);
  process.exit(1);
}

console.log('‚úÖ Service worker personnalis√© trouv√©');

// V√©rifier que le composant UpdateNotification existe
const updateNotificationPath = path.join(__dirname, '..', 'src', 'components', 'UpdateNotification.tsx');
if (!fs.existsSync(updateNotificationPath)) {
  console.error('‚ùå Composant UpdateNotification non trouv√©:', updateNotificationPath);
  process.exit(1);
}

console.log('‚úÖ Composant UpdateNotification trouv√©');

// V√©rifier la configuration PWA
const nextConfigPath = path.join(__dirname, '..', 'next.config.ts');
if (!fs.existsSync(nextConfigPath)) {
  console.error('‚ùå Configuration Next.js non trouv√©e:', nextConfigPath);
  process.exit(1);
}

const nextConfigContent = fs.readFileSync(nextConfigPath, 'utf8');
if (!nextConfigContent.includes('sw-custom.js')) {
  console.error('‚ùå Service worker personnalis√© non configur√© dans next.config.ts');
  process.exit(1);
}

console.log('‚úÖ Configuration PWA correcte');

console.log('\nüìã Instructions pour tester les notifications de mise √† jour :');
console.log('1. D√©ployez l\'application en production');
console.log('2. Installez la PWA sur un appareil mobile');
console.log('3. Faites une nouvelle version avec node scripts/update-pwa.js');
console.log('4. Rechargez la page sur l\'appareil mobile');
console.log('5. Vous devriez voir une notification "Nouvelle version disponible"');
console.log('6. Cliquez sur "Mettre √† jour" pour appliquer la mise √† jour');

console.log('\nüîß Fonctionnalit√©s impl√©ment√©es :');
console.log('‚úÖ Service worker personnalis√© avec gestion des mises √† jour');
console.log('‚úÖ Composant UpdateNotification pour afficher les notifications');
console.log('‚úÖ V√©rification automatique des mises √† jour (toutes les 30 minutes)');
console.log('‚úÖ Bouton "Mettre √† jour" pour forcer l\'application de la mise √† jour');
console.log('‚úÖ Bouton "Plus tard" pour reporter la mise √† jour');

console.log('\nüéØ R√©sultat attendu :');
console.log('- Les utilisateurs verront une notification en bas de l\'√©cran');
console.log('- La notification appara√Ætra automatiquement quand une mise √† jour est disponible');
console.log('- L\'utilisateur peut choisir de mettre √† jour imm√©diatement ou plus tard');
console.log('- La mise √† jour recharge automatiquement la page pour appliquer les changements'); 